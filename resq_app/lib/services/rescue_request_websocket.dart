import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:web_socket_channel/web_socket_channel.dart';
import 'package:resq_app/config/app_config.dart'; // ƒê·∫£m b·∫£o AppConfig ƒë∆∞·ª£c import ƒë√∫ng

class RescueRequestWebSocket extends StatefulWidget {
  final int partnerId;

  const RescueRequestWebSocket({super.key, required this.partnerId});

  @override
  State<RescueRequestWebSocket> createState() => _RescueRequestWebSocketState();
}

class _RescueRequestWebSocketState extends State<RescueRequestWebSocket> {
  late WebSocketChannel _channel;
  Map<String, dynamic>? currentRequest;

  // S·ª≠ d·ª•ng AppConfig cho c√°c URL

  final String wsUrl =
      '${wsBaseUrl}/ws/rescue/${DateTime.now().millisecondsSinceEpoch}'; // B·∫°n c√≥ th·ªÉ c√¢n nh·∫Øc d√πng widget.partnerId thay cho DateTime.now() n·∫øu backend h·ªó tr·ª£

  @override
  void initState() {
    super.initState();
    _channel = WebSocketChannel.connect(Uri.parse(wsUrl));

    _channel.stream.listen(
      (message) {
        debugPrint("üì© WebSocket received: $message");
        try {
          final data = jsonDecode(message);
          if (data['type'] == 'RESCUE_REQUEST') {
            setState(() {
              currentRequest = data['payload'];
            });
          }
        } catch (e) {
          debugPrint("‚ùå Error parsing WebSocket data: $e");
        }
      },
      onError: (error) {
        debugPrint("‚ùå WebSocket error: $error");
      },
      onDone: () {
        debugPrint("‚ùå WebSocket closed");
      },
    );
  }

  @override
  void dispose() {
    _channel.sink.close();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // Widget n√†y s·∫Ω hi·ªÉn th·ªã y√™u c·∫ßu n·∫øu c√≥,
    // nh∆∞ng b·∫°n c√≥ th·ªÉ kh√¥ng c·∫ßn hi·ªÉn th·ªã n√≥ tr·ª±c ti·∫øp n·∫øu b·∫°n d√πng AlertDialog nh∆∞ ·ªü PartnerDashboardScreen
    return currentRequest != null
        ? Card(
          margin: const EdgeInsets.all(16),
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                Text(
                  "üÜò Rescue Request",
                  style: Theme.of(context).textTheme.titleLarge,
                ),
                const SizedBox(height: 8),
                Text("Type: ${currentRequest!['rescueType']}"),
                Text("Time: ${currentRequest!['createdAt']}"),
                Text("Lat: ${currentRequest!['latitude']}"),
                Text("Lon: ${currentRequest!['longitude']}"),
                const SizedBox(height: 12),
                // N√∫t "Ch·∫•p nh·∫≠n" v√† "T·ª´ ch·ªëi" ƒë√£ ƒë∆∞·ª£c chuy·ªÉn sang AlertDialog trong PartnerDashboardScreen
                // N·∫øu b·∫°n mu·ªën hi·ªÉn th·ªã ·ªü ƒë√¢y, b·∫°n s·∫Ω c·∫ßn truy·ªÅn h√†m callback t·ª´ cha xu·ªëng.
                // Hi·ªán t·∫°i, t√¥i khuy·∫øn ngh·ªã x·ª≠ l√Ω qua AlertDialog trong PartnerDashboardScreen.
              ],
            ),
          ),
        )
        : const Center(child: Text("‚è≥ ƒêang ch·ªù y√™u c·∫ßu c·ª©u h·ªô..."));
  }
}
